Word,Count
,208
to,184
the,123
USE:,89
rick,86
gessner,86
a,82
*,79
for,67
of,66
this,64
on,63
directory,63
in,55
by,53
be,48
Copyright,44
reserved,43
All,43
rights,43
if,43
Â©,43
Created,43
name,42
return,39
and,38
we,38
should,36
2019,36
entry,35
is,33
file,30
block,30
you,29
from,27
need,26
stream,26
so,25
skip,24
that,24
entity,23
given,23
<<,21
not,21
or,20
Database3,20
string,20
as,20
This,19
STUDENT:,19
an,19
have,18
storage,18
},17
{,17
it,17
DB,17
can,17
with,16
into,16
each,16
next,16
data,15
all,15
table,15
type,15
new,15
memory,14
your,14
Read,14
use,13
error,13
permission,13
list,13
Datatabase4,13
value,12
check,12
pointer,12
=,12
sure,12
call,12
read,12
create,11
add,11
File,11
convert,11
StatusResult,11
class,11
zero,11
get,10
just,10
are,10
retrieve,10
when,10
do,10
index,10
used,9
field,9
write,9
no,9
|,9
---------------------------------------,9
first,9
case,9
now,9
multi-byte,9
want,9
-----------------------------------------------------,9
Entity,8
make,8
entities,8
STATEMENT,8
buffer,8
called,8
may,8
row,8
=============================,8
then,8
----------------------------------,8
const,8
will,8
wide-character,8
statement,8
path,8
key,8
this..,7
fields,7
entity..,7
free,7
============,7
Convert,7
Release,7
Return,7
related..,7
view,7
entries,7
storage..,7
2018,7
has,7
Open,7
name..,7
We,7
If,7
structure,7
implement,7
USE,7
user,7
NULL,7
db,7
search,7
{name}..,7
at,6
show,6
**,6
files,6
blocks,6
Length,6
load,6
Cannot,6
Block,6
cache,6
indices,6
Studio,6
object,6
Visual,6
absolute,6
else,6
primary,6
later,6
where,6
Allocate,6
parse,6
size,6
identifier..,6
attribute,6
TOC,6
number,6
store,6
hang,6
it's,6
4/12/19,6
Write,6
int,5
ask,5
count,5
mark,5
declare,5
going,5
low,5
NOTE:,5
one,5
here,5
yank,5
also,5
4/13/19,5
assume,5
uint32_t,5
temporary,5
build,5
remove,5
record,5
database,5
handle,5
buffers..,5
Microsoft,5
Database1,5
sync,5
:,5
std::endl;,5
find,5
rows,5
table..,5
level,5
version,5
terminator,5
Get,5
which,5
describes,5
compiler,4
Returns,4
actually,4
std::cout,4
already,4
using,4
loaded,4
but,4
set,4
change,4
rows..,4
without,4
std::string,4
\block,\,4
WinRT,4
cannot,4
collection,4
consume,4
+-----------+----------------------+,4
Directory,4
--,4
returns,4
CREATE,4
code,4
\"\\,4
needs,4
folder,4
Close,4
Execute,4
let's,4
bit,4
output,4
current,4
DATABASE,4
ignore,4
up,4
file..,4
end,4
ECEDatabase,4
open,4
success,4
2,4
Note,4
group,4
Success,4
function,4
dump,4
result,4
after,4
Windows,4
\&aBlock,\,4
don't,4
1,4
block..,4
\one,\,4
\aBlockNumber,\,4
command..,4
select,4
--------------------------------------------------,3
\storage,\,3
general,3
3/24/19,3
3/20/19,3
too,3
d_type,3
being,3
'where',3
\field,\,3
method,3
update,3
might,3
working,3
later..,3
char,3
Database,3
macros,3
completely,3
stream..,3
Reset,3
{tablename}..,3
Dirent,3
known,3
3/30/18,3
header,3
temp;,3
actual,3
functions,3
blockNums,3
(may,3
our,3
even,3
No,3
//std::cout,3
Rewind,3
room,3
\number,\,3
others,3
(or,3
valid,3
they're,3
potentially,3
doesn't,3
debug,3
keyword,3
length,3
order,3
been,3
Set,3
TABLE,3
only,3
allocated,3
ECE141::DataType::timestamp_type,3
save,3
_wreaddir(),3
iterate,3
still,3
4/25/19,3
token..,3
row..,3
about,3
OK,3
any,3
buffer..,3
resulting,3
like,3
validate,3
dirent,3
while,3
c++,3
(if,3
Filters,3
The,3
match,3
inserting..,3
multiple,3
blocknum,3
it..,3
call..,3
values,3
Error,3
map,3
(for,3
relative,3
pattern,3
statement..,3
2005,3
(int)timestamp;,3
allows,3
yet,3
how,3
yet..,3
==================================================================,3
last,3
display..,3
StatusResult{noError};,3
character,3
include,3
sets,2
field-list..,2
TO,2
aBlockNum),2
string..,2
DIR,2
probably,2
access,2
conversion,2
\kStoredIdentifierLen,\,2
least,2
ctor,2
defines,2
C++,2
%,2
Got,2
contains,2
statically,2
named,2
describe,2
CHANGED,2
drop,2
flags,2
-----------------------------------------------------------,2
operand,2
{},2
prefer..,2
show(),2
means,2
#,2
commands..,2
true,2
mode;,2
=======================================================,2
scan,2
max,2
names,2
INSERT,2
valType,2
'identifier'..,2
Must,2
know,2
throw,2
These,2
opendir(),2
target..,2
StringList*,2
records,2
0..,2
non-Microsoft,2
encode,2
failure,2
anyway,2
id,2
----------------------------------------,2
key/value,2
resave,2
single,2
requests,2
found..,2
DESCRIBE,2
Pipe,2
sizeof(Block));,2
exception),2
\a,b..\,2
input,2
we've,2
SHOW,2
_WDIR,2
properly,2
BlockVisitor_h,2
properties,2
see,2
fields.empty(),2
given..,2
Always,2
clear,2
Older,2
over,2
fixed-size,2
look,2
position,2
excluding,2
some,2
Add,2
filters,2
compatibility,2
based,2
initial,2
TOTALLY,2
case..,2
Our,2
4/19/18,2
\0,2
written,2
attributes,2
area,2
another,2
ahead..,2
schema,2
=======,2
directory..,2
manage,2
binary,2
dummy,2
everything,2
&,2
\view,\,2
input..,2
define,2
default,2
4/15/19,2
DROP,2
could,2
Encode,2
\this,\,2
Indicates,2
(NOT,2
For,2
invalid,2
hash,2
them,2
basic,2
Desktop,2
Structure,2
aList,2
frwd..,2
\&anEntity,\,2
system,2
old,2
eat,2
row;,2
enum,2
tablename..,2
false,2
\(fields),\,2
filter,2
It's,2
internal,2
text,2
paths,2
opened,2
RowCollection&,2
we're,2
execute,2
Failure,2
toc,2
Index&,2
Find,2
delete,2
time..,2
its,2
WITH,2
\buffer,\,2
tokenizer,2
3/17/19,2
'operator'..,2
try,2
device,2
WHERE,2
Index,2
whether,2
overwrite,2
Sockets,2
used..,2
(internal),2
//so,2
keep,2
generic,2
more,2
format..,2
stored,2
auto,2
KeyValues,2
std::size_t,2
\paths,\,2
Decode,2
DB's..,2
CreateDB,2
Not,2
what,2
operator..,2
rewinddir(),2
\object,\,2
reached,2
'database_kw'..,2
purpose..,2
very,2
free..,2
blocks..,2
available,2
purpose,2
way,2
(storage),2
tokens..,2
Use:,2
between,2
view..,2
cause,2
location..,2
DELETE,2
\reached,\,2
attemp,2
0,2
Compute,2
issue..,2
force,2
existing,2
expect,2
\entity,\,2
variable,2
Zero-terminate,2
statements,2
haven't,2
individual,2
console,2
there's,2
constructor,2
keywords,2
otherwise,2
construct,2
decode,2
INTO,2
4/22/19,2
\((char*)&aBlock,\,2
always,2
put,2
within,2
3/25/19,2
'*',2
3,2
End,2
main,2
full,2
3/19/19,2
suitable,2
safely,2
Implement,2
rowCollection;,2
were,2
autoincrement,2
'table_kw'..,2
'into_kw'..,2
STUDENT,2
dumb,2
assuming,2
calls,2
SELECT,2
trick,2
FROM,2
Invalid,2
\operator=,\,1
be..,1
example:,1
seem,1
statusresult,1
\key,\,1
Entries,1
'tables_kw'..,1
MSVC,1
curr,1
mask,1
aStream.flush();,1
table/DB,1
\created\n"\\,1
again,1
enter,1
associated,1
every,1
\(field,\,1
4/29/18,1
errno,1
Non-Microsoft,1
\Flag,\,1
router,1
open),1
written..,1
internals..,1
\found,\,1
aBlockNum);,1
\,if\,1
Storage(const,1
EntityDescriptionView.hpp,1
\timest,\,1
Statement_hpp,1
theData.size(),1
nums,1
task,1
Link,1
converting,1
View.hpp,1
\rowCollection(aRowCollection),\,1
storage.eachBlock(blockV);,1
attr,1
theValue(temp);,1
RGTokenizer,1
type..,1
aState),1
\"\own"\\,1
runnable,1
dtor,1
StatusResult{};,1
entity;,1
Maximum,1
characters,1
Range.hpp,1
size_t,1
Storage::writeBlock(int,1
operator()(Storage,1
sqlstatements,1
most,1
\"\("\\,1
basetypes.hpp,1
len,1
==============,1
DB..,1
markDirty(bool,1
versions,1
user..,1
\"\fields.empty()"\\,1
CommandProcessor.hpp,1
aBlockSize=sizeof(Block));,1
UNSIGNED,1
ctors(),1
fine,1
VirtualBox,1
Do,1
Unix-code,1
usually,1
if(aValue.getType()!=value.getType()),1
encoding/decoding,1
sequences,1
CreateNewStorage{},1
0;,1
blockNums..,1
FolderReader.cpp,1
(fields),1
StatusResult(readError);,1
Row.hpp,1
here..,1
BlockCache(),1
S_ISSOCK,1
values..,1
That,1
Statement.cpp,1
Try,1
Regular,1
container..,1
generate,1
1),1
processing,1
header..,1
forward,1
windows.h,1
DBStatement_h,1
\'"\'))\,1
transforming,1
descriptive,1
#include,1
indexed,1
sockets,1
would,1
tested..,1
ownership,1
SQLStatement.hpp,1
theStream(theData);,1
setSize(uint32_t,1
std::stringstream,1
const_cast<Row&>(theRow).getColumns();,1
both..,1
timestamp,1
count++;,1
local,1
char..,1
compare,1
4/14/19,1
(the,1
off,1
Checking,1
TBD,1
Multi-byte,1
allocate,1
indices..,1
available;,1
void,1
become(aValue.valueType);,1
EntityDescriptionView.cpp,1
unreferenced,1
RecordsView_h,1
self,1
reset..,1
operator(),1
aState;,1
Values,1
works,1
\index,\,1
nth..,1
\OP,\,1
Value_h,1
attributes..,1
tells,1
\"\table"\\,1
thePair.first,1
distributed,1
updateRow,1
directory:,1
MAY,1
[F]ree..,1
ShowTablesView,1
included,1
out,1
maximum,1
information,1
original,1
Operand,1
'use_kw'..,1
https://github.com/tronkko/dirent,1
statement),1
(*),1
WINDOZE..,1
\strings,\,1
Hide,1
Storage::readBlock(int,1
because,1
extra,1
\rows,\,1
bloc,1
us,1
well..,1
dealing,1
by..,1
//yank,1
ids,1
THIS,1
\PE,\,1
likely,1
\status,\,1
so..,1
Symbian,1
\BlockVisitor(anEntity,\,1
one..,1
readBlock(int,1
address,1
anything,1
append,1
tag..,1
persisting,1
factory,1
operators..,1
(and,1
Filters.hpp,1
child,1
big,1
------------------------------------------------------------,1
std::fstream,1
enlarge,1
where..,1
public:,1
platforms..,1
Reader..,1
guys,1
(entity);,1
\*,1
gets,1
varchar)..,1
block's,1
managing,1
\'db',\,1
tokenize,1
(!(count,1
erroneous,1
thru..,1
\BY,\,1
//totally,1
status,1
decl,1
Include,1
Define,1
View_h,1
Hang,1
Toni,1
distinguished,1
try..,1
message,1
semi..,1
(decode),1
(see:,1
BAD,1
EntityDescriptionView_hpp,1
datatype..,1
\write(aBlock,\,1
subystem..,1
\&aRowCollection,\,1
there,1
fieldId=value,1
Storage.hpp,1
//attemp,1
encoded,1
NEED,1
enums,1
Private,1
removing,1
empty),1
modify,1
USERS,1
mixin,1
hold,1
Override,1
DB-commands..,1
Dammit,1
part,1
--------------------------,1
unfamiliar,1
interface,1
&entity;,1
//columns[key],1
top,1
Did,1
ORDER,1
under,1
----------,1
created,1
clause..,1
st_mode,1
assocated,1
reader,1
SelectRowBlockVisitor&,1
provided,1
4/8/19,1
Keep,1
(int),1
(block=0),1
operators,1
CommandProcessor_hpp,1
dummyBlock,1
attr..,1
go,1
characters),1
DATABASEs,1
across,1
platform,1
<name>..,1
handled,1
\file,\,1
Scan,1
SQLInterpreter.cpp,1
--------------------------------------------------------------,1
protected:,1
Internal,1
Determine,1
Table,1
deleted...,1
Could,1
activeDB,1
BlockVisitor,1
'from'..,1
twice,1
4/26/19,1
\"\where"\\,1
std::endl;;,1
isNumericKeyword(type);,1
mbstr,1
temp,1
cacheList,1
other,1
such,1
uint_32..,1
functions..,1
\TOC.entities,\,1
GROUP,1
(...)..,1
different..,1
short,1
stream);,1
\"\size\,1
tabular,1
(ugh),1
annoying,1
traditional,1
indexBlockNum;//make,1
present,1
presents,1
4/17/19,1
blocks;,1
SQLStatement,1
helps,1
separator,1
links,1
types,1
fields(aFields),1
contain,1
correctly,1
HACK,1
preserve,1
folders,1
sort,1
closedir,1
pass,1
StatusResult{writeError};,1
DBManager.cpp,1
file)..,1
parsing,1
then?,1
keyvalue,1
\0,\,1
method:,1
Tokenizer_hpp,1
\&aStorage,\,1
empty,1
(pack),1
Database.hpp,1
making,1
SQL,1
value...),1
needed),1
(via,1
selected...,1
code..,1
I'm,1
raw,1
reference,1
beginning,1
plus,1
updating,1
You,1
Copy,1
auto-incr,1
\"\value:\,1
(token)..,1
string)..,1
\Else,\,1
use..,1
theLength);,1
keyword..,1
(C),1
(chain-of-resp),1
increment,1
DBManager_hpp,1
waiting,1
Decrement,1
[insert,1
==,1
sync..,1
folder..,1
subsequent,1
(where,1
Failed,1
w/chars,1
getWidth(),1
details,1
/,1
added,1
\"\)"\]\,1
};,1
VALUES,1
Attribute.hpp,1
(TOC),1
SET,1
=========,1
(in,1
\columns.insert({key,\,1
dirty,1
ends,1
can't,1
#bytes,1
reuse,1
comma..,1
&aBlock),1
VERY,1
const;,1
(from,1
//theValue.debugDump(std::cout);,1
below,1
Filters_hpp,1
\"\;"\..\,1
callback..,1
lparen..,1
field..,1
starting,1
filters..,1
erease,1
theindex,1
them..,1
exact,1
empty..,1
overwritten,1
RecordsView.hpp,1
human,1
union..,1
iter..,1
purposes..,1
Row.cpp,1
Folder,1
3;,1
reading,1
\default,\,1
THIS..,1
FIX,1
ready,1
available),1
building,1
Double,1
Helpers.hpp,1
========,1
reading..,1
\Maybe,\,1
WHATEVER,1
ANOTHER,1
\&aChar,\,1
things,1
(emit),1
keywords_h,1
(considering,1
method..,1
isn't,1
=========================================,1
needed,1
made,1
semicolon..,1
declared,1
custom,1
\validation,\,1
\here,\,1
processing..,1
\(identifiers,\,1
\(value1,value2,...),\,1
------------------------------------------------------------------------,1
theSRBV);,1
invalidates,1
Value,1
EOF..,1
freely,1
std::out,1
noError,1
USED),1
\documentation,\,1
num,1
DBManager.hpp,1
holding,1
db/storage,1
---validate,1
MIT,1
too..,1
placed,1
us..,1
same,1
[varchar,1
tokens,1
nullable..,1
(remove,1
numbers...),1
zero-terminator,1
idea..,1
3/21/19,1
YET)..,1
nullptr,1
plain,1
older,1
CommandProcessor.cpp,1
database..,1
incrementing,1
\WHERE,\,1
typedef..,1
entity),1
FolderReader_hpp,1
\ok,\,1
Index::markDirty(bool,1
attribute..,1
deleting,1
\well,\,1
exists,1
attempt,1
found,1
\expression,\,1
Database(const,1
\attribute-list,\,1
location,1
DIRNAME,1
RowCollection,1
aBlockSize),1
\fields,\,1
Show,1
asks,1
expressions,1
&aStorage);,1
\(value,\,1
TokenType::number:,1
specified,1
1.1,1
stream.seekp(aBlockNumber,1
something,1
DBStatement.hpp,1
--------,1
Your,1
Attribute_hpp,1
(name,1
record)...,1
(#,1
map..,1
you're,1
\aName.c_str(),\,1
\aCopy.name,\,1
first_name,1
<cstring>,1
gross,1
\row,\,1
//updateRow(),1
entity-block,1
pairs,1
LHS..,1
operator,1
\tokens.push_back(Token(TokenType::function,temp));\,1
Storage.cpp,1
integer,1
markUsed(const,1
if(aStream.write,1
approach..,1
|name|,1
Linear,1
didn't,1
aState);,1
missing,1
proxied,1
created)..,1
info,1
CURRENTLY,1
'from_kw'..,1
fieldnames,1
By,1
theWriter,1
prevent,1
better,1
set),1
empty)..,1
\temp,\,1
\&aFilters,\,1
value),1
valType;,1
Out,1
ware,1
Be,1
------,1
\DB,\,1
onto,1
dropping,1
UPDATE,1
occurred,1
WORKING,1
------------------------------------------------,1
\type,\,1
stream.seekg(aBlockNumber,1
---------------------------------------------,1
-------------------,1
MemoryStream_h,1
Store,1
default:,1
(tables),1
Storage_hpp,1
UpdateRowBlockVisitor(const,1
Value.cpp,1
instead,1
completed..,1
block_num,1
TODO,1
')',1
===================================================================,1
come,1
DIRENT_H,1
constructing,1
aFields),1
\otherwise,\,1
primaryKey,1
theValue.become((ECE141::DataType)valType[0]);,1
combine,1
well,1
Base,1
indicating,1
handle..,1
MemoryStream.c,1
True,1
appended,1
remember,1
processors,1
You'll,1
work;,1
exit,1
//We,1
\"\table\,1
\"\valType:\,1
theTokenizer(aStream);,1
list..,1
thePair.second;,1
storing,1
zero-terminate,1
encoding,1
her,1
trying,1
cache..,1
bytes,1
=>,1
auto_inc,1
keywords.hpp,1
binds,1
WINDOWS,1
uses,1
&aBlock);,1
although,1
d_namlen,1
SQLStatement_hpp,1
offset..,1
';',1
area..,1
[options]),1
storage/io,1
unless,1
public,1
fall,1
constructor;,1
SQL-oriented,1
member,1
\function,\,1
key..,1
field...),1
run,1
utility,1
Let,1
db-commands..,1
theEntity's,1
const_cast,1
assumption,1
deleteRows(const,1
proper,1
Now,1
\characters,\,1
\stream.seekg(stream.tellg(),\,1
varchar,1
own,1
e.g,1
keeping,1
before,1
(dir);,1
\values,\,1
Call,1
&aDatabase);,1
Enlarge,1
formatted..,1
Database_hpp,1
true;,1
key;,1
\matches"\\,1
TYPE,1
Initial,1
\separator,\,1
related,1
aCollection),1
ptr,1
//do,1
\aStorage,\,1
\"\Before\,1
\strncpy_s(theEntity.name,\,1
db..,1
decide,1
Validate,1
(DEBUG),1
\"\Key:\,1
Tokenizer.hpp,1
std::string(aBlock.data);,1
if(stream.read,1
<,1
(after,1
strverscmp,1
theData,1
'datbase_kw'..,1
license,1
utility..,1
theLen);,1
dynamic,1
indicate,1
reach,1
rewrite,1
4/1/18,1
filename,1
Sort,1
init,1
At,1
>,1
shared,1
\GREAT,\,1
..,1
append..,1
ECE141::Value,1
\(where,\,1
NEW,1
(stored,1
enlarged,1
\int,\,1
S_ISLNK,1
previously,1
rickg,1
============================================================,1
Succesfully,1
got,1
goes,1
negative,1
orderby...),1
incremented,1
approach,1
reuse..,1
getCollection(),1
readability,1
databases,1
names..,1
readable,1
unicode,1
default.,1
&aStream),1
---------------------------------------------------------------------------,1
stop,1
NOT,1
--------------------------------------,1
loading,1
MemoryStream.h,1
\input,\,1
theEntity,1
TokenType::identifier:,1
\stat(),\,1
Character,1
statement.attributes,1
display,1
switch(aType),1
TOC...,1
writeBlock(int,1
&aKeyValueList,1
inserting,1
ECE141::Tokenizer,1
changed..,1
Storage,1
destination,1
all),1
c:\temp\,1
'update'..,1
groupBy.push_back(new,1
OS,1
fail,1
parsed,1
49-ish,1
//,1
conflicts,1
validation..,1
\(getline(theStream,\,1
matching,1
code...Please,1
created..,1
processed,1
simplifies,1
\Operand,\,1
blocknum..,1
Passed,1
languages..,1
maybe,1
fails..,1
Clear,1
seek),1
errors,1
Feel,1
small,1
above),1
Socket,1
Statement.hpp,1
belonging,1
loadDatabase())..,1
now...),1
\'where',\,1
Filters.cpp,1
\S_ISBLK,\,1
wide,1
\TOC,\,1
8+3,1
(unvalidated),1
{};,1
perform,1
\aChar,\,1
long,1
returned,1
commandable.runStatement(*this);,1
Current,1
UpdateRowBlockVisitor:,1
\theIndex,\,1
extension..,1
truncate,1
columns.erase();,1
------------------------,1
one...),1
occurs,1
unloaded,1
blockNum,1
VERIFY...,1
Alphabetical,1
aBlockSize)),1
Attribute.cpp,1
parsing..,1
warnings,1
Append,1
\groupby,\,1
\worked,\,1
//what,1
Wide-character,1
theType,1
low-level,1
static,1
callback,1
Names,1
observer,1
fltValue,1
\'(',\,1
A,1
receive,1
loop,1
free-blocks,1
Finding,1
\aFilters),\,1
TokenType::string:,1
\keys+values,\,1
theValue});,1
RGTokenizer_hpp,1
Don't,1
sizeof(Block))),1
defined,1
\{[D]ata,\,1
updated..,1
row?)..,1
RGTokenizer.cpp,1
\match,\,1
object..,1
theResult,1
*this;,1
TABLES,1
subclass,1
write(Block,1
[F]ree,1
Entity_hpp,1
\dirent_win.h,\,1
logic,1
these,1
BY..,1
therefore,1
index..,1
Tokenizer.cpp,1
1998-2019,1
RHS..,1
base,1
theType),1
does,1
Range_h,1
Entity.hpp,1
fields;,1
\msg,\,1
command,1
\float,\,1
attributes[0],1
indexBlockNums,1
Keywords::varchar_kw==type;,1
\devices,\,1
types..,1
statement;,1
3/22/19,1
guide...),1
assumes,1
'activeDB',1
\"\\n"\;\,1
fit,1
value..,1
appropriate,1
Attempt,1
though,1
tracking,1
represented,1
work..,1
w/,1
(using,1
\toc.entites.count,\,1
'databases_kw'..,1
readjust,1
value?,1
6.0,1
&aFilters);,1
contents..,1
YOU,1
bad,1
optional..,1
efficient,1
vector,1
SQLStatement.cpp,1
caller,1
Row_h,1
ms,1
guessing,1
\tokenizer,\,1
Win32,1
value!!!!,1
\string,\,1
provides,1
NOP,1
theSize);,1
\case,\,1
Helpers_h,1
SQLInterpreter.hpp,1
payload,1
\StatusResult{noError},\,1
---------------------,1
many,1
plan,1
\it,\,1
kept,1
datatype,1
Storage::markUsed(const,1
Schema.cpp,1
act,1
-------------------------------------------,1
Database.cpp,1
Value.hpp,1
false;,1
(assumes,1
quote..,1
APPROACH,1
result;,1
asked,1
released..,1
//need,1
-1,1
changed,1
'.',1
warnings..,1
std::ios::beg);,1
----------------------------------------------------,1
aParser.skip(1);,1
//used,1
key/values..,1
&filters;,1
tasks:,1
legitimate,1
---------------------------------------------------,1
despite,1
main.cpp,1
decl..,1
methods..,1
problem..,1
\(bool,\,1
comma-sep,1
called-allocated,1
seekp,1
aFields,1
insert,1
pos,1
----------------------------------------------,1
NUMBER,1
Macros,1
=============================================,1
active,1
size..,1
theValue;,1
turn,1
FIXME:,1
operands,1
SQLInterpreter_hpp,1
ramsin,1
Ronkko,1
\')',\,1
((count,1
map.,1
from..,1
pos..,1
RGTokenizer.hpp,1
FreeMap,1
auto_increment,1
each(Storage&,1
right,1
persisted,1
locate,1
tables,1
Pass,1
'set'..,1
per,1
until,1
if(getFunctionId(temp)),1
field+value,1
common,1
time,1
produce,1
theType)),1
2.0,1
(|attrs|)..,1
Keyword,1
WindowsFolderReader..,1
sorting,1
PATH_MAX,1
Property((*theIter).data));,1
multi-bytes,1
C-string,1
mac/unix,1
Index_h,1
SIGNED,1
\strncpy_s(name,\,1
